# 调度标识名 集群中每一个实例都必须使用相同的名称
quartz.scheduler.instanceName=QuartScheduler
# ID设置为自动获取 每一个必须不同
org.quartz.scheduler.instanceId=AUTO
# 禁用quartz软件更新
org.quartz.scheduler.skipUpdateCheck=true
org.quartz.scheduler.jmx.export=true

# 数据库代理类，一般org.quartz.impl.jdbcjobstore.StdJDBCDelegate可以满足大部分数据库
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 数据保存方式为数据库持久化
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
# 数据库别名 随便取
org.quartz.jobStore.dataSource=quartzDataSource
#org.quartz.jobStore.dataSource=myDS
# 表的前缀，默认QRTZ_
org.quartz.jobStore.tablePrefix=QRTZ_
# 是否加入集群
org.quartz.jobStore.isClustered=true

# 调度实例失效的检查时间间隔
org.quartz.jobStore.clusterCheckinInterval=20000
org.quartz.jobStore.maxMisfiresToHandleAtATime=1
# 信息保存时间 ms 默认值60秒
org.quartz.jobStore.misfireThreshold=120000
org.quartz.jobStore.txIsolationLevelSerializable=true
org.quartz.jobStore.selectWithLockSQL=SELECT * FROM {0}LOCKS WHERE LOCK_NAME = ? FOR UPDATE

# 程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
# 定线程数，至少为1（无默认值）(一般设置为1-100之间的整数合适)
org.quartz.threadPool.threadCount=4
# 设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）
org.quartz.threadPool.threadPriority=2
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true

org.quartz.plugin.triggHistory.class=org.quartz.plugins.history.LoggingJobHistoryPlugin
org.quartz.plugin.shutdownhook.class=org.quartz.plugins.management.ShutdownHookPlugin
org.quartz.plugin.shutdownhook.cleanShutdown=true

##自定义连接池
#org.quartz.dataSource.myDS.connectionProvider.class=com.poly.pay.schedule.DruidConnectionProvider
